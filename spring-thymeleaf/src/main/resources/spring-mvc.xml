<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描组件 -->
    <context:component-scan base-package="com.phoenixhell.springmvc"/>

    <!--配置静态资源处理 servlet dispatchsevlet 处理不了的请求（找不到） 由此servlet处理 -->
    <mvc:default-servlet-handler />

    <!-- 当SpringMVC中设置任何一个view-controller时，
    其他控制器中的请求映射将全部失效，此时需要启mvc注解驱动的标签：
    <mvc:annotation-driven />

    同理，当我们设置默认的sevlet来处理静态资源时候，只有静态资源被处理，
    控制器中写的静态资源也会全部失效，同样要配置这个mvc注解驱动

    同理 java对象转换为json对象同样要设置mvc的驱动-->
    <mvc:annotation-driven />

    <mvc:interceptors>
      <mvc:interceptor>
          <!-- 这边 /* 代表一层目录 /a   /**代表多层目录 /a/b/c -->
          <mvc:mapping path="/**"/>
          <mvc:exclude-mapping path="/testRequestEntity"/>
          <ref bean="firstInterceptor"/>
      </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

</beans>